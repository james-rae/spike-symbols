import{gU as y,gV as p,gW as f,gX as x,V as g,gY as L,gZ as U,c1 as w,aC as S,g_ as T,cy as h,g$ as D,s as b,aw as V,av as W,d_ as z,ax as E,ay as P,h0 as $,h1 as M,h2 as _,h3 as v}from"./spike-symbols.js";import{S as j,u as X,c as Y}from"./defaults-CBYGZvbD.js";import{e as Z,i as q}from"./defaultsJSON-GKolV7NZ.js";y.fromSimpleMarkerSymbol(j);p.fromSimpleLineSymbol(X);f.fromSimpleFillSymbol(Y);new x({symbolLayers:new g([new L({material:{color:Z},edges:new U({size:w(1),color:new S(q)})})])});const A=new p({symbolLayers:new g([new T({material:{color:new S([0,0,0])},size:w(1)})])}),B=new f({symbolLayers:new g([new L({outline:{color:new S([0,0,0]),size:w(1)}})])}),I="#useCIMFallbackSymbology()",i={retainId:!1,ignoreDrivers:!1,hasLabelingContext:!0};function G(e,n=i){var t,u,C,d;if(!e)return{symbol:null};const{retainId:a=i.retainId,ignoreDrivers:o=i.ignoreDrivers,hasLabelingContext:r=i.hasLabelingContext,retainCIM:m=i.retainCIM,cimFallbackEnabled:l=i.cimFallbackEnabled}=n;let s=null;if(h(e)||e instanceof D)s=e.clone();else if(e.type==="cim"){const c=(u=(t=e.data)==null?void 0:t.symbol)==null?void 0:u.type;switch(c){case"CIMPointSymbol":s=m?e.clone():y.fromCIMSymbol(e);break;case"CIMLineSymbol":l&&(s=A.clone(),(C=n==null?void 0:n.logWarning)==null||C.call(n,I,"Unsupported CIM line symbology converted to fallback 3D line symbology"));break;case"CIMPolygonSymbol":l&&(s=B.clone(),(d=n==null?void 0:n.logWarning)==null||d.call(n,I,"Unsupported CIM polygon symbology converted to fallback 3D polygon symbology"))}if(!s)return{error:new b("symbol-conversion:unsupported-cim-symbol",`CIM symbol of type '${c||"unknown"}' is unsupported in 3D`,{symbol:e})}}else if(e instanceof V)s=p.fromSimpleLineSymbol(e);else if(e instanceof W)s=y.fromSimpleMarkerSymbol(e);else if(e instanceof z)s=y.fromPictureMarkerSymbol(e);else if(e instanceof E)s=n.geometryType&&n.geometryType==="mesh"?x.fromSimpleFillSymbol(e):f.fromSimpleFillSymbol(e);else{if(!(e instanceof P))return{error:new b("symbol-conversion:unsupported-2d-symbol",`2D symbol of type '${e.type||e.declaredClass}' is unsupported in 3D`,{symbol:e})};s=r?$.fromTextSymbol(e):y.fromTextSymbol(e)}return a&&s&&s.type!=="cim"&&(s.id=e.id),o&&h(s)&&s.symbolLayers.forEach(c=>c.ignoreDrivers=!0),{symbol:s}}function O(e,n,a,o){const r=F(e,{},{context:o,isLabelSymbol:!1});r!=null&&(n[a]=r)}function Q(e,n,a,o){const r=F(e,{},{context:o,isLabelSymbol:!0});r!=null&&(n[a]=r)}function k(e){return e instanceof v||e instanceof D}function H(e){return e instanceof v&&(e.type==="polygon-3d"||e.type==="line-3d")}function F(e,n,a){var s;if(e==null)return null;const{context:o,isLabelSymbol:r}=a,m=o==null?void 0:o.origin,l=o==null?void 0:o.messages;if(m==="web-scene"&&!k(e)){const t=G(e,{retainCIM:!0,hasLabelingContext:r});return t.symbol!=null?t.symbol.write(n,o):(l==null||l.push(new b("symbol:unsupported",`Symbols of type '${e.declaredClass}' are not supported in scenes. Use 3D symbology instead when working with WebScene and SceneView`,{symbol:e,context:o,error:t.error})),null)}return M(o==null?void 0:o.layer)&&H(e)?(l==null||l.push(new b("symbol:unsupported",`Symbols of type '${e.declaredClass}' are not supported on layers of type '${(s=o==null?void 0:o.layer)==null?void 0:s.declaredClass}'.`,{symbol:e,context:o})),null):(m==="web-map"||m==="portal-item"&&!M(o==null?void 0:o.layer))&&k(e)?(l==null||l.push(new b("symbol:unsupported",`Symbols of type '${e.declaredClass}' are not supported in web maps and portal items. Use 2D symbology and CIMSymbol instead when working with MapView`,{symbol:e,context:o})),null):e.write(n,o)}function R(e,n){return _(e,null,n)}export{Q as i,O as l,R as p};
//# sourceMappingURL=jsonUtils-B6BNTLPc.js.map
