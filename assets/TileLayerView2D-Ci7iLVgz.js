import{c as w,a as y,p as I,b as V,e as H,f as v,i as T,k as o,m as g,n as q,o as n,u as f,v as U}from"./spike-symbols.js";import"./colorUtils-CxpR8kgL.js";import"./utils-Bgq9-INc.js";import"./enums-CmIX1y88.js";import"./floatRGBA-CfouSdH2.js";import"./UpdateTracking2D-CrEvi5Z7.js";import"./GeometryUtils-Cqj9IHCf.js";import"./defaults-CBYGZvbD.js";import"./OverrideHelper-BY3qVKDN.js";import"./Container-1jIGcClG.js";import"./WGLContainer-CImgX_CT.js";import"./Program-Cxdj17lW.js";import"./LabelMetric-PHKs_pq8.js";import"./StyleDefinition-BTt_i6C1.js";import"./enums-BRzLM11V.js";import"./GridShader-CQSnc9Sq.js";import"./pbf-CCxG-t_w.js";import"./FeatureCommandQueue-_nes6LKT.js";import"./PieChartMeshWriter-D30Xahn7.js";import"./renderState-CPSwhhVh.js";import"./interfaces-DDtDqZYj.js";import"./testSVGPremultipliedAlpha-CAT16COA.js";import{F as b}from"./GraphicsView2D-CeCRWDOT.js";import"./earcut-Lltz9D9k.js";import"./vec3f32-nZdmKIgz.js";import{r as C,o as m,n as d}from"./imageUtils-BxnWw91F.js";import{j as Q,y as S}from"./LayerView-Dj9UmBBt.js";import{h as $}from"./HighlightGraphicContainer-CpZXSlCV.js";import{i as F}from"./RefreshableLayerView-CnIYAbdI.js";import{_ as P,R as k}from"./MapServiceLayerViewHelper-Cv7BrKDc.js";import{r as L}from"./drapedUtils-8cz5tEVP.js";import"./vec42-CGd3qQJJ.js";import"./vec4f64-CMoMXWBi.js";import"./BidiEngine-DNnuvc1i.js";import"./OptimizedFeature-D3320lj0.js";import"./Rect-CUzevAry.js";import"./BindType-BmZEZMMh.js";import"./Util-Bhx86tqm.js";import"./defaultsJSON-GKolV7NZ.js";import"./quantizationUtils-EnfPALPv.js";import"./BufferObject-CSPERlzr.js";import"./VertexArrayObject-DAMe4oiC.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./ProgramTemplate-DplDQ5RO.js";import"./config-MDUrh2eL.js";import"./featureConversionUtils-BxDN9gkv.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./CircularArray-CujHzHWW.js";import"./AttributeStore-Cj_89wZQ.js";import"./TimeOnly-CLsZxU64.js";import"./UnknownTimeZone-Cjcij_vG.js";import"./timeSupport-C5fg3loK.js";import"./queryUtils-C-LTqSVD.js";import"./json-Wa8cmqdu.js";import"./labelUtils-BzX0145M.js";import"./FieldsIndex-iG3PpdUf.js";import"./diffUtils-ObaWOk_n.js";import"./constants-F8oTIn7N.js";import"./TurboLine-4mk0qIaN.js";import"./basicInterfaces-CZwQPxTp.js";import"./normalizeUtilsSync-Dq-_EcbJ.js";import"./Bitmap-DnEglIPE.js";import"./TileContainer-D9ca65vC.js";import"./layerViewUtils-BVBGw69c.js";import"./AGraphicContainer-DhZ_oX5G.js";import"./TechniqueInstance-C9q2IBzz.js";import"./languageUtils-C4OZehN3.js";import"./ImmutableArray-BPVd6ESQ.js";import"./shared-CvLoc2Fx.js";import"./number-ColPpShx.js";import"./scaleUtils-YKMhrdEs.js";import"./floorFilterUtils-DZ5C6FQv.js";import"./sublayerUtils-CU9E7VJK.js";import"./popupUtils-Dx_dBhNf.js";const E=[0,0];let a=class extends F(C(Q(S))){constructor(){super(...arguments),this._fetchQueue=null,this._highlightGraphics=new w,this._highlightView=null,this._popupHighlightHelper=null,this._tileStrategy=null,this.layer=null}get resampling(){return!("resampling"in this.layer)||this.layer.resampling!==!1}get tilemapCache(){return"tilemapCache"in this.layer?this.layer.tilemapCache:null}update(t){var i;this._fetchQueue.pause(),this._fetchQueue.state=t.state,this._tileStrategy.update(t),this._fetchQueue.resume(),(i=this._highlightView)==null||i.processUpdate(t)}attach(){const t="tileServers"in this.layer?this.layer.tileServers:null,i=this.tilemapCache;if(this._tileInfoView=new y(this.layer.tileInfo,this.layer.fullExtent,i==null?void 0:i.effectiveMinLOD,i==null?void 0:i.effectiveMaxLOD),this._fetchQueue=new I({tileInfoView:this._tileInfoView,concurrency:t&&10*t.length||10,process:(e,r)=>this.fetchTile(e,r),scheduler:this.scheduler,priority:V.MAPVIEW_FETCH_QUEUE}),this._tileStrategy=new H({cachePolicy:"keep",resampling:this.resampling,acquireTile:e=>this.acquireTile(e),releaseTile:e=>this.releaseTile(e),tileInfoView:this._tileInfoView}),P(this,this.layer)){const e=this._highlightView=new b({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new $(this.view.featuresTilingScheme),defaultPointSymbolEnabled:!1});this.container.addChild(this._highlightView.container),this._popupHighlightHelper=new k({createFetchPopupFeaturesQueryGeometry:(r,h)=>L(r,h,this.view),highlightGraphics:this._highlightGraphics,highlightGraphicUpdated:(r,h)=>{e.graphicUpdateHandler({graphic:r,property:h})},layerView:this,updatingHandles:this._updatingHandles})}this.requestUpdate(),this.addAttachHandles(this._updatingHandles.add(()=>this.resampling,()=>{this.doRefresh()})),super.attach()}detach(){var t,i;super.detach(),this._tileStrategy.destroy(),this._fetchQueue.clear(),this.container.removeAllChildren(),(t=this._popupHighlightHelper)==null||t.destroy(),(i=this._highlightView)==null||i.destroy(),this._fetchQueue=this._tileStrategy=this._tileInfoView=this._popupHighlightHelper=null}async fetchPopupFeaturesAtLocation(t,i){return this._popupHighlightHelper?this._popupHighlightHelper.fetchPopupFeaturesAtLocation(t,i):[]}highlight(t){return this._popupHighlightHelper?this._popupHighlightHelper.highlight(t):v()}viewChange(){this.requestUpdate()}moveEnd(){this.requestUpdate()}supportsSpatialReference(t){var i;return T((i=this.layer.tileInfo)==null?void 0:i.spatialReference,t)}async doRefresh(){if(this.attached){if(this.suspended)return this._tileStrategy.clear(),void this.requestUpdate();this._fetchQueue.reset(),this._tileStrategy.refresh(t=>this._updatingHandles.addPromise(this._enqueueTileFetch(t)))}}acquireTile(t){const i=this._bitmapView.createTile(t),e=i.bitmap;return[e.x,e.y]=this._tileInfoView.getTileCoords(E,i.key),e.resolution=this._tileInfoView.getTileResolution(i.key),[e.width,e.height]=this._tileInfoView.tileInfo.size,this._updatingHandles.addPromise(this._enqueueTileFetch(i)),this._bitmapView.addChild(i),this.requestUpdate(),i}releaseTile(t){this._fetchQueue.abort(t.key.id),this._bitmapView.removeChild(t),t.once("detach",()=>t.destroy()),this.requestUpdate()}async fetchTile(t,i={}){const e=this.tilemapCache,{signal:r,resamplingLevel:h=0}=i;if(!e)try{return await this._fetchImage(t,r)}catch(s){if(!o(s)&&!this.resampling)return m(this._tileInfoView.tileInfo.size);if(h<3){const u=this._tileInfoView.getTileParentId(t.id);if(u){const c=new g(u),_=await this.fetchTile(c,{...i,resamplingLevel:h+1});return d(this._tileInfoView,_,c,t)}}throw s}const p=new g(0,0,0,0);let l;try{if(await e.fetchAvailabilityUpsample(t.level,t.row,t.col,p,{signal:r}),!this.resampling&&p.level!==t.level)return m(this._tileInfoView.tileInfo.size);l=await this._fetchImage(p,r)}catch(s){if(o(s))throw s;return m(this._tileInfoView.tileInfo.size)}return this.resampling?d(this._tileInfoView,l,p,t):l}async _enqueueTileFetch(t){if(!this._fetchQueue.has(t.key.id)){try{const i=await this._fetchQueue.push(t.key);t.bitmap.source=i,t.bitmap.width=this._tileInfoView.tileInfo.size[0],t.bitmap.height=this._tileInfoView.tileInfo.size[1],t.once("attach",()=>this.requestUpdate())}catch(i){o(i)||q.getLogger(this).error(i)}this.requestUpdate()}}async _fetchImage(t,i){return this.layer.fetchImageBitmapTile(t.level,t.row,t.col,{signal:i})}};n([f()],a.prototype,"resampling",null),n([f()],a.prototype,"tilemapCache",null),a=n([U("esri.views.2d.layers.TileLayerView2D")],a);const ri=a;export{ri as default};
//# sourceMappingURL=TileLayerView2D-Ci7iLVgz.js.map
