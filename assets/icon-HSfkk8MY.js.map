{"version":3,"file":"icon-HSfkk8MY.js","sources":["../../node_modules/@esri/calcite-components/dist/components/icon.js"],"sourcesContent":["/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\n * v2.13.2\n */\nimport { getAssetPath, proxyCustomElement, HTMLElement, h, Host } from '@stencil/core/internal/client';\nimport { a as getElementDir, t as toAriaBoolean } from './dom.js';\nimport { c as createObserver } from './observers.js';\nimport { i as isBrowser } from './browser.js';\n\nconst CSS = {\n    icon: \"icon\",\n    flipRtl: \"flip-rtl\",\n};\n\n/**\n * Icon data cache.\n * Exported for testing purposes.\n *\n * @private\n */\nconst iconCache = {};\n/**\n * Icon request cache.\n * Exported for testing purposes.\n *\n * @private\n */\nconst requestCache = {};\nconst scaleToPx = {\n    s: 16,\n    m: 24,\n    l: 32,\n};\nfunction generateIconId({ icon, scale }) {\n    const size = scaleToPx[scale];\n    const name = normalizeIconName(icon);\n    const filled = name.charAt(name.length - 1) === \"F\";\n    const iconName = filled ? name.substring(0, name.length - 1) : name;\n    return `${iconName}${size}${filled ? \"F\" : \"\"}`;\n}\nasync function fetchIcon(props) {\n    const cachedIconKey = generateIconId(props);\n    const cachedIconData = getCachedIconDataByKey(cachedIconKey);\n    if (cachedIconData) {\n        return cachedIconData;\n    }\n    if (!requestCache[cachedIconKey]) {\n        requestCache[cachedIconKey] = fetch(getAssetPath(`./assets/icon/${cachedIconKey}.json`))\n            .then((resp) => resp.json())\n            .catch(() => {\n            console.error(`\"${cachedIconKey}\" is not a valid calcite-ui-icon name`);\n            return \"\";\n        });\n    }\n    const path = await requestCache[cachedIconKey];\n    iconCache[cachedIconKey] = path;\n    return path;\n}\n/**\n * Util to retrieve cached icon data based on icon name and scale.\n *\n * @param props – icon properties\n */\nfunction getCachedIconData(props) {\n    return getCachedIconDataByKey(generateIconId(props));\n}\nfunction getCachedIconDataByKey(id) {\n    return iconCache[id];\n}\n/**\n * Normalize the icon name to match the path data module exports.\n * Exported for testing purposes.\n *\n * @param name – an icon name that can be either kebab or camel-cased\n * @private\n */\nfunction normalizeIconName(name) {\n    const numberLeadingName = !isNaN(Number(name.charAt(0)));\n    const parts = name.split(\"-\");\n    const kebabCased = parts.length > 0;\n    if (kebabCased) {\n        const firstNonDigitInPartPattern = /[a-z]/i;\n        name = parts\n            .map((part, partIndex) => {\n            return part.replace(firstNonDigitInPartPattern, function replacer(match, offset) {\n                const isFirstCharInName = partIndex === 0 && offset === 0;\n                if (isFirstCharInName) {\n                    return match;\n                }\n                return match.toUpperCase();\n            });\n        })\n            .join(\"\");\n    }\n    return numberLeadingName ? `i${name}` : name;\n}\n\nconst iconCss = \":host{display:inline-flex;color:var(--calcite-icon-color, var(--calcite-ui-icon-color, currentColor))}:host([scale=s]){inline-size:16px;block-size:16px;min-inline-size:16px;min-block-size:16px}:host([scale=m]){inline-size:24px;block-size:24px;min-inline-size:24px;min-block-size:24px}:host([scale=l]){inline-size:32px;block-size:32px;min-inline-size:32px;min-block-size:32px}.flip-rtl{transform:scaleX(-1)}.svg{display:block}:host([hidden]){display:none}[hidden]{display:none}\";\nconst CalciteIconStyle0 = iconCss;\n\nconst Icon = /*@__PURE__*/ proxyCustomElement(class Icon extends HTMLElement {\n    constructor() {\n        super();\n        this.__registerHost();\n        this.__attachShadow();\n        this.icon = null;\n        this.flipRtl = false;\n        this.scale = \"m\";\n        this.textLabel = undefined;\n        this.pathData = undefined;\n        this.visible = false;\n    }\n    //--------------------------------------------------------------------------\n    //\n    //  Lifecycle\n    //\n    //--------------------------------------------------------------------------\n    connectedCallback() {\n        if (!this.visible) {\n            this.waitUntilVisible(() => {\n                this.visible = true;\n                this.loadIconPathData();\n            });\n        }\n    }\n    disconnectedCallback() {\n        this.intersectionObserver?.disconnect();\n        this.intersectionObserver = null;\n    }\n    render() {\n        const { el, flipRtl, pathData, scale, textLabel } = this;\n        const dir = getElementDir(el);\n        const size = scaleToPx[scale];\n        const semantic = !!textLabel;\n        const paths = [].concat(pathData || \"\");\n        return (h(Host, { key: '724265acdc6fb528bf7b25d7ec445c73a63f4c8e', \"aria-hidden\": toAriaBoolean(!semantic), \"aria-label\": semantic ? textLabel : null, role: semantic ? \"img\" : null }, h(\"svg\", { key: '864ee2d80bebd282543ba5d94c57f84b48a6204d', \"aria-hidden\": \"true\", class: {\n                [CSS.flipRtl]: dir === \"rtl\" && flipRtl,\n                svg: true,\n            }, fill: \"currentColor\", height: \"100%\", viewBox: `0 0 ${size} ${size}`, width: \"100%\", xmlns: \"http://www.w3.org/2000/svg\" }, paths.map((path) => typeof path === \"string\" ? (h(\"path\", { d: path })) : (h(\"path\", { d: path.d, opacity: \"opacity\" in path ? path.opacity : 1 }))))));\n    }\n    //--------------------------------------------------------------------------\n    //\n    //  Private Methods\n    //\n    //--------------------------------------------------------------------------\n    async loadIconPathData() {\n        const { icon, scale, visible } = this;\n        if (!isBrowser() || !icon || !visible) {\n            return;\n        }\n        const fetchIconProps = { icon, scale };\n        const pathData = getCachedIconData(fetchIconProps) || (await fetchIcon(fetchIconProps));\n        // While the fetchIcon method is awaiting response, the icon requested can change. This check is to verify the response received belongs to the current icon.\n        if (icon !== this.icon) {\n            return;\n        }\n        this.pathData = pathData;\n    }\n    waitUntilVisible(callback) {\n        this.intersectionObserver = createObserver(\"intersection\", (entries) => {\n            entries.forEach((entry) => {\n                if (entry.isIntersecting) {\n                    this.intersectionObserver.disconnect();\n                    this.intersectionObserver = null;\n                    callback();\n                }\n            });\n        }, { rootMargin: \"50px\" });\n        if (!this.intersectionObserver) {\n            callback();\n            return;\n        }\n        this.intersectionObserver.observe(this.el);\n    }\n    static get assetsDirs() { return [\"assets\"]; }\n    get el() { return this; }\n    static get watchers() { return {\n        \"icon\": [\"loadIconPathData\"],\n        \"scale\": [\"loadIconPathData\"]\n    }; }\n    static get style() { return CalciteIconStyle0; }\n}, [1, \"calcite-icon\", {\n        \"icon\": [513],\n        \"flipRtl\": [516, \"flip-rtl\"],\n        \"scale\": [513],\n        \"textLabel\": [1, \"text-label\"],\n        \"pathData\": [32],\n        \"visible\": [32]\n    }, undefined, {\n        \"icon\": [\"loadIconPathData\"],\n        \"scale\": [\"loadIconPathData\"]\n    }]);\nfunction defineCustomElement() {\n    if (typeof customElements === \"undefined\") {\n        return;\n    }\n    const components = [\"calcite-icon\"];\n    components.forEach(tagName => { switch (tagName) {\n        case \"calcite-icon\":\n            if (!customElements.get(tagName)) {\n                customElements.define(tagName, Icon);\n            }\n            break;\n    } });\n}\ndefineCustomElement();\n\nexport { Icon as I, defineCustomElement as d };\n\n//# sourceMappingURL=icon.js.map"],"names":["CSS","iconCache","requestCache","scaleToPx","generateIconId","icon","scale","size","name","normalizeIconName","filled","fetchIcon","props","cachedIconKey","cachedIconData","getCachedIconDataByKey","getAssetPath","resp","path","getCachedIconData","id","numberLeadingName","parts","firstNonDigitInPartPattern","part","partIndex","match","offset","iconCss","CalciteIconStyle0","Icon","proxyCustomElement","HTMLElement","_a","el","flipRtl","pathData","textLabel","dir","getElementDir","semantic","paths","h","Host","toAriaBoolean","visible","isBrowser","fetchIconProps","callback","createObserver","entries","entry","defineCustomElement","tagName"],"mappings":"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","x_google_ignoreList":[0]}